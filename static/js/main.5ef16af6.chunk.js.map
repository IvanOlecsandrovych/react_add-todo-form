{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","currentUser","users","find","cn","TodoList","todos","map","App","useState","todoList","setTodoList","setTitle","currentUserId","setCurrentUserId","invalidTitle","setInvalidTitle","invalidUser","setInvalidUser","action","method","onSubmit","event","preventDefault","trim","list","newTodo","Math","max","currentList","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ef16af6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../interfaces/user';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../interfaces/todo';\nimport users from '../../api/users';\nimport { User } from '../../interfaces/user';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const currentUser = users.find(user => user.id === todo.userId) as User;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {currentUser && <UserInfo user={currentUser} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../interfaces/todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport users from './api/users';\nimport todos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './interfaces/todo';\n\nconst newId = (list: Todo[]) => {\n  const maxId = Math.max(...list.map(todo => todo.id));\n\n  return maxId + 1;\n};\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [currentUserId, setCurrentUserId] = useState('0');\n  const [invalidTitle, setInvalidTitle] = useState(false);\n  const [invalidUser, setInvalidUser] = useState(false);\n\n  const onTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setInvalidTitle(false);\n  };\n\n  const onUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentUserId(event.target.value);\n    setInvalidUser(false);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setInvalidTitle(true);\n    }\n\n    if (currentUserId === '0') {\n      setInvalidUser(true);\n    }\n\n    if (!title.trim() || currentUserId === '0') {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: newId(todoList),\n      title,\n      completed: false,\n      userId: +currentUserId,\n    };\n\n    setTodoList(currentList => [...currentList, newTodo]);\n\n    setCurrentUserId('0');\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={onTitleChange}\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {invalidTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={currentUserId}\n              onChange={onUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(user => (\n                <option value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n\n            </select>\n          </label>\n\n          {invalidUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}